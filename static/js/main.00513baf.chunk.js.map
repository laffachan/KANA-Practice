{"version":3,"sources":["serviceWorker.js","kana.tsx","Revision.tsx","Question.tsx","Practice.tsx","Home.tsx","App.tsx","index.tsx"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","hiragana","katakana","Revision","handleClose","className","onClick","map","e","key","findKana","kanaList","romaji","find","kana","toLowerCase","goodEmoji","badEmoji","Question","goodAnswer","onGoodAnswered","onBadAnswered","useState","isCorrect","setIsCorrect","exist","setExist","inputValue","setInputValue","isAnswered","setIsAnswered","good","Math","floor","random","length","bad","clear","useEffect","classNames","action","onSubmit","preventDefault","debounceTimeout","type","minLength","maxLength","size","spellCheck","autoCapitalize","autoCorrect","autoComplete","onChange","userKana","target","value","aria-label","data-testid","getRandomKana","data","Practice","timerId","randomKana","setRandomKana","clearTimeout","setTimeout","Home","to","role","href","App","showModal","setShowModal","handleCloseModal","Modal","setAppElement","style","minHeight","isOpen","contentLabel","onRequestClose","path","rootElement","document","getElementById","ReactDOM","render","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.00513baf.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","export const hiragana = [\r\n  [\"あ\", \"a\"],\r\n  [\"い\", \"i\"],\r\n  [\"う\", \"u\"],\r\n  [\"え\", \"e\"],\r\n  [\"お\", \"o\"],\r\n  [\"か\", \"ka\"],\r\n  [\"き\", \"ki\"],\r\n  [\"く\", \"ku\"],\r\n  [\"け\", \"ke\"],\r\n  [\"こ\", \"ko\"],\r\n  [\"さ\", \"sa\"],\r\n  [\"し\", \"shi\"],\r\n  [\"す\", \"su\"],\r\n  [\"せ\", \"se\"],\r\n  [\"そ\", \"so\"],\r\n  [\"た\", \"ta\"],\r\n  [\"ち\", \"chi\"],\r\n  [\"つ\", \"tsu\"],\r\n  [\"て\", \"te\"],\r\n  [\"と\", \"to\"],\r\n  [\"な\", \"na\"],\r\n  [\"に\", \"ni\"],\r\n  [\"ぬ\", \"nu\"],\r\n  [\"ね\", \"ne\"],\r\n  [\"の\", \"no\"],\r\n  [\"は\", \"ha\"],\r\n  [\"ひ\", \"hi\"],\r\n  [\"ふ\", \"fu\"],\r\n  [\"へ\", \"he\"],\r\n  [\"ほ\", \"ho\"],\r\n  [\"ま\", \"ma\"],\r\n  [\"み\", \"mi\"],\r\n  [\"む\", \"mu\"],\r\n  [\"め\", \"me\"],\r\n  [\"も\", \"mo\"],\r\n  [\"や\", \"ya\"],\r\n  [\"ゆ\", \"yu\"],\r\n  [\"よ\", \"yo\"],\r\n  [\"ら\", \"ra\"],\r\n  [\"り\", \"ri\"],\r\n  [\"る\", \"ru\"],\r\n  [\"れ\", \"re\"],\r\n  [\"ろ\", \"ro\"],\r\n  [\"わ\", \"wa\"],\r\n  [\"を\", \"wo\"],\r\n  [\"が\", \"ga\"],\r\n  [\"ぎ\", \"gi\"],\r\n  [\"ぐ\", \"gu\"],\r\n  [\"げ\", \"ge\"],\r\n  [\"ご\", \"go\"],\r\n  [\"ざ\", \"za\"],\r\n  [\"じ\", \"ji\"],\r\n  [\"ず\", \"zu\"],\r\n  [\"ぜ\", \"ze\"],\r\n  [\"ぞ\", \"zo\"],\r\n  [\"だ\", \"da\"],\r\n  [\"ぢ\", \"dji\"],\r\n  [\"づ\", \"dzu\"],\r\n  [\"で\", \"de\"],\r\n  [\"ど\", \"do\"],\r\n  [\"ば\", \"ba\"],\r\n  [\"び\", \"bi\"],\r\n  [\"ぶ\", \"bu\"],\r\n  [\"べ\", \"be\"],\r\n  [\"ぼ\", \"bo\"],\r\n  [\"ぱ\", \"pa\"],\r\n  [\"ぴ\", \"pi\"],\r\n  [\"ぷ\", \"pu\"],\r\n  [\"ぺ\", \"pe\"],\r\n  [\"ぽ\", \"po\"],\r\n  [\"ん\", \"n\"]\r\n];\r\n\r\nexport const katakana = [\r\n  [\"ア\", \"a\"],\r\n  [\"イ\", \"i\"],\r\n  [\"ウ\", \"u\"],\r\n  [\"エ\", \"e\"],\r\n  [\"オ\", \"o\"],\r\n  [\"カ\", \"ka\"],\r\n  [\"キ\", \"ki\"],\r\n  [\"ク\", \"ku\"],\r\n  [\"ケ\", \"ke\"],\r\n  [\"コ\", \"ko\"],\r\n  [\"サ\", \"sa\"],\r\n  [\"シ\", \"shi\"],\r\n  [\"ス\", \"su\"],\r\n  [\"セ\", \"se\"],\r\n  [\"ソ\", \"so\"],\r\n  [\"タ\", \"ta\"],\r\n  [\"チ\", \"chi\"],\r\n  [\"ツ\", \"tsu\"],\r\n  [\"テ\", \"te\"],\r\n  [\"ト\", \"to\"],\r\n  [\"ナ\", \"na\"],\r\n  [\"ニ\", \"ni\"],\r\n  [\"ヌ\", \"nu\"],\r\n  [\"ネ\", \"ne\"],\r\n  [\"ノ\", \"no\"],\r\n  [\"ハ\", \"ha\"],\r\n  [\"ヒ\", \"hi\"],\r\n  [\"フ\", \"fu\"],\r\n  [\"ヘ\", \"he\"],\r\n  [\"ホ\", \"ho\"],\r\n  [\"マ\", \"ma\"],\r\n  [\"ミ\", \"mi\"],\r\n  [\"ム\", \"mu\"],\r\n  [\"メ\", \"me\"],\r\n  [\"モ\", \"mo\"],\r\n  [\"ヤ\", \"ya\"],\r\n  [\"ユ\", \"yu\"],\r\n  [\"ヨ\", \"yo\"],\r\n  [\"ラ\", \"ra\"],\r\n  [\"リ\", \"ri\"],\r\n  [\"ル\", \"ru\"],\r\n  [\"レ\", \"re\"],\r\n  [\"ロ\", \"ro\"],\r\n  [\"ワ\", \"wa\"],\r\n  [\"ヲ\", \"wo\"],\r\n  [\"ガ\", \"ga\"],\r\n  [\"ギ\", \"gi\"],\r\n  [\"グ\", \"gu\"],\r\n  [\"ゲ\", \"ge\"],\r\n  [\"ゴ\", \"go\"],\r\n  [\"ザ\", \"za\"],\r\n  [\"ジ\", \"ji\"],\r\n  [\"ズ\", \"zu\"],\r\n  [\"ゼ\", \"ze\"],\r\n  [\"ゾ\", \"zo\"],\r\n  [\"ダ\", \"da\"],\r\n  [\"ヂ\", \"dji\"],\r\n  [\"ヅ\", \"dzu\"],\r\n  [\"デ\", \"de\"],\r\n  [\"ド\", \"do\"],\r\n  [\"バ\", \"ba\"],\r\n  [\"ビ\", \"bi\"],\r\n  [\"ブ\", \"bu\"],\r\n  [\"ベ\", \"be\"],\r\n  [\"ボ\", \"bo\"],\r\n  [\"パ\", \"pa\"],\r\n  [\"ピ\", \"pi\"],\r\n  [\"プ\", \"pu\"],\r\n  [\"ペ\", \"pe\"],\r\n  [\"ポ\", \"po\"],\r\n  [\"ン\", \"n\"]\r\n];\r\n","import React from \"react\";\r\nimport { hiragana, katakana } from \"./kana\";\r\n\r\ntype Props = {\r\n  handleClose: () => void;\r\n};\r\n\r\nfunction Revision({ handleClose }: Props) {\r\n  return (\r\n    <div className=\"flex flex-col items-center text-black\">\r\n      <div className=\"fixed\">\r\n        <button\r\n          className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\r\n          onClick={handleClose}\r\n        >\r\n          Close\r\n        </button>\r\n      </div>\r\n      <div className=\"pt-12 text-xl pb-2\">\r\n        <table className=\"border-collapse border-4 border-gray-500\">\r\n          <thead>\r\n            <tr>\r\n              <th className=\"w-1/3 px-1 py-2\">Romaji</th>\r\n              <th className=\"w-1/3 px-1 py-2\">Hiragana</th>\r\n              <th className=\"w-1/3 px-1 py-2\">Katakana</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"text-center\">\r\n            <tr>\r\n              <td className=\"border px-4 py-2\">\r\n                {hiragana.map(e => (\r\n                  <li className=\"list-none\" key={e[0]}>\r\n                    {e[1]}\r\n                  </li>\r\n                ))}\r\n              </td>\r\n              <td className=\"border px-4 py-2\">\r\n                {hiragana.map(e => (\r\n                  <li className=\"list-none\" key={e[0]}>\r\n                    {e[0]}\r\n                  </li>\r\n                ))}\r\n              </td>\r\n              <td className=\"border px-4 py-2\">\r\n                {katakana.map(e => (\r\n                  <li className=\"list-none\" key={e[0]}>\r\n                    {e[0]}\r\n                  </li>\r\n                ))}\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Revision;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { DebounceInput } from \"react-debounce-input\";\r\nimport classNames from \"classnames\";\r\n\r\nfunction findKana(kanaList: string[][], romaji: string): string | undefined {\r\n  const [kana] = kanaList.find(kana  => kana[1] === romaji.toLowerCase()) || [];\r\n  return kana;\r\n}\r\n\r\ntype Props = {\r\n  kanaList: string[][];\r\n  kana: string;\r\n  goodAnswer: string;\r\n  onGoodAnswered: () => void;\r\n  onBadAnswered: () => void;\r\n};\r\n\r\nconst goodEmoji = [\r\n  \"😊\",\r\n  \"🤓\",\r\n  \"😃\",\r\n  \"🤩\",\r\n  \"🥳\",\r\n  \"👍\",\r\n  \"👏\",\r\n  \"💪\",\r\n  \"😍\",\r\n  \"😁\",\r\n  \"🤠\"\r\n];\r\nconst badEmoji = [\r\n  \"😆\",\r\n  \"🤣\",\r\n  \"🤐\",\r\n  \"🙄\",\r\n  \"🤢\",\r\n  \"😵\",\r\n  \"☹\",\r\n  \"😰\",\r\n  \"😭\",\r\n  \"😖\",\r\n  \"😱\",\r\n  \"🤬\",\r\n  \"👎\"\r\n];\r\n\r\n// kanaList is an array of pairs kana <-> romaji\r\n// example: [[\"あ\", \"a\"], [\"い\", \"i\"] ...]\r\n// kana is the kana that the user needs to translate\r\n// example: \"あ\"\r\nfunction Question({\r\n  kanaList,\r\n  kana,\r\n  goodAnswer,\r\n  onGoodAnswered,\r\n  onBadAnswered\r\n}: Props) {\r\n  const [isCorrect, setIsCorrect] = useState(false);\r\n  const [exist, setExist] = useState(true);\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [isAnswered, setIsAnswered] = useState(false);\r\n\r\n  const good = [...goodEmoji][\r\n    Math.floor(Math.random() * [...goodEmoji].length)\r\n  ];\r\n  const bad = [...badEmoji][Math.floor(Math.random() * [...badEmoji].length)];\r\n\r\n  useEffect(clear, [kana]);\r\n\r\n  function handleChange(e: React.ChangeEvent<HTMLInputElement>) {\r\n    const userKana = findKana(kanaList, e.target.value);\r\n    setInputValue(e.target.value);\r\n    console.log(userKana, isAnswered, !isCorrect);\r\n    // si il existe\r\n    if (userKana) {\r\n      console.log(\"test\");\r\n      setIsAnswered(true);\r\n      setExist(true);\r\n      setIsCorrect(userKana === kana);\r\n      if (userKana === kana) {\r\n        onGoodAnswered();\r\n      }\r\n    } else {\r\n      setExist(false);\r\n    }\r\n  }\r\n\r\n  function getAnswer () {\r\n    setIsAnswered(true);\r\n    setIsCorrect(false);\r\n  }\r\n\r\n  function next() {\r\n    clear();\r\n    onBadAnswered();\r\n  }\r\n\r\n  function handleSubmit(e: React.FormEvent<HTMLFormElement>) {\r\n    e.preventDefault();\r\n    console.log(inputValue);\r\n    if (isAnswered === true) {\r\n      if (!isCorrect) {\r\n        onBadAnswered();\r\n        clear();\r\n      } \r\n    }\r\n  }\r\n\r\n  function clear() {\r\n    setIsAnswered(false);\r\n    setIsCorrect(false);\r\n    setInputValue(\"\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"pt-12 text-center\">\r\n    <div className=\"relative\">\r\n      <div onClick={getAnswer}\r\n        className={classNames(\r\n          \"absolute border-2 border-gray-400 rounded p-2 mb-6 inline-block text-6xl w-32 m-2 cursor-pointer \",\r\n          {\r\n            \"border-green-400\": isAnswered && isCorrect,\r\n            \"absolute transition transform -translate-x-20 duration-1000 border-red-400\": isAnswered && !isCorrect\r\n          }\r\n        )}\r\n      >\r\n        {kana}\r\n      </div>\r\n      <div onClick={next}\r\n        className={classNames(\r\n          \"border-2 border-gray-400 rounded p-2 mb-6 inline-block text-6xl w-32 m-2 uppercase cursor-pointer\",\r\n          {\r\n            \"invisible\": !isAnswered || isCorrect,\r\n            \"transition transform translate-x-20 duration-1000 border-red-400\": isAnswered && !isCorrect\r\n          }\r\n        )}\r\n      >\r\n        {goodAnswer}\r\n      </div>\r\n      </div>\r\n      <form action=\"#\" onSubmit={handleSubmit}>\r\n        <DebounceInput\r\n          debounceTimeout={300}\r\n          type=\"text\"\r\n          className={classNames(\r\n            \"relative border border-gray-400 w-32 rounded-md mb-4 px-2 py-1 uppercase text-center w-24 text-xl text-black\",\r\n            {\r\n              \"border-green-800 bg-green-200 text-green-800\":\r\n                isAnswered && isCorrect,\r\n              \"border-red-800 bg-red-200 text-red-800\": isAnswered && !isCorrect\r\n            }\r\n          )}\r\n          minLength={1}\r\n          maxLength={4}\r\n          size={4}\r\n          spellCheck={false}\r\n          autoCapitalize=\"none\"\r\n          autoCorrect=\"off\"\r\n          autoComplete=\"off\"\r\n          onChange={handleChange}\r\n          aria-label=\"questionInput\"\r\n          value={inputValue}\r\n        />\r\n        <div data-testid=\"status\" className=\"text-xl\">\r\n          {isAnswered && exist ? (\r\n            isCorrect ? (\r\n              <div data-testid=\"good\">{good}</div>\r\n            ) : (\r\n              <div data-testid=\"bad\">{bad}</div>\r\n            )\r\n          ) : (\r\n            \"\"\r\n          )}{\" \"}\r\n        </div>\r\n        {isAnswered && !isCorrect ? (\r\n          <>\r\n            <p className=\"text-gray-600 mx-6\">\r\n              <span className=\"uppercase\">{inputValue}</span> ={\" \"}\r\n              {findKana(kanaList, inputValue)} / press enter to continue, or click on the answer\r\n            </p>\r\n          </>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Question;\r\n\r\n","import React, { useState } from \"react\";\r\nimport Question from \"./Question\";\r\n\r\ntype Props = {\r\n  data: string[][];\r\n};\r\n\r\nfunction getRandomKana(data: string[][]): string[] | (() => string[]) {\r\n  return data[Math.floor(Math.random() * data.length)];\r\n}\r\n\r\nfunction Practice({ data }: Props) {\r\n  let timerId: number;\r\n  const [randomKana, setRandomKana] = useState(getRandomKana(data));\r\n \r\n\r\n  function handleGoodAnswered() {\r\n    if (timerId) {\r\n      clearTimeout(timerId);\r\n    }\r\n    timerId = window.setTimeout(() => setRandomKana(getRandomKana(data)), 1000);\r\n  }\r\n\r\n  function handleBadAnswered() {\r\n    setRandomKana(getRandomKana(data));\r\n  }\r\n\r\n  return (\r\n\r\n    <div>\r\n      <div className=\"pt-12 text-center text-xl\">\r\n        <Question\r\n          kanaList={data}\r\n          kana={randomKana[0]}\r\n          goodAnswer={randomKana[1]}\r\n          onGoodAnswered={handleGoodAnswered}\r\n          onBadAnswered={handleBadAnswered}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Practice;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Home() {\r\n  return (\r\n    <div className=\"pt-20 flex flex-1 flex-col items-center leading-relaxed text-3xl sm:text-5xl\">\r\n        Practice\r\n        <Link to=\"/hiragana\" className=\"underline\">\r\n          Hiragana ひらがな\r\n        </Link>\r\n        <p>or</p>\r\n        <Link to=\"/katakana\" className=\"underline\">\r\n          Katakana カタカナ\r\n        </Link>\r\n        <div className=\"border-2 text-sm italic mt-16 m-8 p-2\">\r\n          <p className=\"font-bold\">How does it work ?</p>\r\n          <p>- Select the kanas you want to practice</p>\r\n          <p>- Find and <span role=\"img\" aria-label=\"writing-hand\">✍️</span> the matching romaji </p>\r\n        </div>\r\n      <footer className=\"text-right w-screen p-4 text-sm absolute bottom-0 border-t bg-teal-100 text-black\">\r\n        <div className=\"lg:mx-40 xl:mx-64 \">\r\n          <a href=\"https://github.com/laffachan/kana-app\">By Laffachan</a>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { HashRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport Revision from \"./Revision\";\r\nimport Practice from \"./Practice\";\r\nimport { hiragana, katakana } from \"./kana\";\r\nimport Home from \"./Home\";\r\nimport ReactModal from \"react-modal\";\r\nimport Modal from \"react-modal\";\r\n\r\nexport default function App() {\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  Modal.setAppElement(\"#root\");\r\n\r\n  function handleOpenModal() {\r\n    setShowModal(true);\r\n  }\r\n\r\n  function handleCloseModal() {\r\n    setShowModal(false);\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <div\r\n        className=\"relative flex flex-col min-h-screen divide-y divide-gray-400\"\r\n        style={{ minHeight: \"-webkit-fill-available\" }}\r\n      >\r\n        <div className=\"flex-grow w-full\">\r\n          <div className=\"p-4 border-b bg-teal-100\">\r\n            <div className=\"lg:mx-40 xl:mx-64 flex justify-between text-black\">\r\n            <Link to=\"/\">\r\n              <div>\r\n                <span role=\"img\" aria-label=\"\">\r\n                  ⛩️\r\n                </span>{\" \"}\r\n                KANA Practice\r\n              </div>\r\n            </Link>\r\n            <div>\r\n              <span role=\"img\" aria-label=\"\">\r\n                📔\r\n              </span>{\" \"}\r\n              <button onClick={handleOpenModal}>Kana List</button>\r\n              <ReactModal\r\n                isOpen={showModal}\r\n                contentLabel=\"Revision\"\r\n                onRequestClose={handleCloseModal}\r\n              >\r\n                <div>\r\n                  <Revision handleClose={handleCloseModal} />\r\n                </div>\r\n              </ReactModal>\r\n            </div>\r\n            </div>\r\n          </div>\r\n          <Switch>\r\n            <Route path=\"/hiragana\">\r\n              <Practice data={hiragana} />\r\n            </Route>\r\n            <Route path=\"/katakana\">\r\n              <Practice data={katakana} />\r\n            </Route>\r\n            <Route path=\"/\">\r\n              <Home />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n// @ts-ignore\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport './assets/main.css';\r\nimport App from \"./App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<App />, rootElement);\r\n\r\nserviceWorker.register();\r\n"],"sourceRoot":""}